
laboratory
----------

Super-simple-virtual-wrapper-xp-mac-and-linux â™¬ ...

An engineering laboratory environment for systems integration rather
than Software Engineering.

Rationale:

Vagrant is great and everything, but is makes some assumptions that disqualifies
it from full-bore integration dev and test.

  * Everything is build from boxes - production systems aren't, we need to tailor from whole-cloth
  * With Vagrant you don't have DNS so inject hosts files - I assume integration with global DNS or provide our own
  * You are always able to reach out to teh interwebs for installation assets - I can build disconnected environments

also 

  * Not everything is a JVM or a cloud instance or a docker container

Example Laboratory:

  DNS Domain: foo.local

                            { intertubes } 10.0.40.1
                                   |
             10.0.40.2             |
  |----------+---------------+-----+--------+-------|  10.0.40.0/24 (vbox natnetwork)
             |             |              |
      enp0s8 |             |              |
      +------+----+  +-----+-----+  +-----+------+  
      |   mason   |  |  guest1   |  |   guest2   |
      +------+----+  +-----+-----+  +-----+------+  
      enp0s3 |             |              |
             |             |              |
  |-----+----+-------------+--------------+---------|  10.0.30.0/24 (vbox hostonly)
        |    10.0.30.2
        |
   +---------+
   |  host   |
   +---------+

Prerequisites
-------------

  * Linux with VirtualBox
  * macOS with VirtualBox
  * Windows 8 with VirtualBox + git for Windows + windows ruby.
    - https://git-for-windows.github.io/
    - https://rubyinstaller.org/
  * Windows 10 with VirtualBox + 'Windows Subsystem for Linux' (not yet tested)

Instructions
------------
Reccomendation: Create a CentOS "gold build" ISO (see https://github.com/mcgarrigle/centos-gold)

  $ sudo yum install git ruby
  $ git clone https://githib.com/mcgarrigle/laboratory.git
  $ cd laboratory
  $ add ~/laboratory/bin to your PATH
  $ sudo gem install bundler
  $ sudo bundle install
  $ review network.lab to see what is going to be built
  $ lab up

Also look at "mason", a plugin and PXE boot host for bringing up laboratories.

Watch all the VMs spin up - if using "centos-gold", watch them install themselves.

Also see:

  https://github.com/mcgarrigle/centos-gold

  https://github.com/mcgarrigle/mason

  and 

  https://github.com/mcgarrigle/role-*

for scripts to install the various server roles in this example.

Manual
------

The environment variable LABORATORY designates the lab file;
the default lab is "project.lab".

lab help
lab up     - creates and starts your lab
lab down   - shuts all VMs down (acpi off)
lab list   - show status of all VMs in lab
lab delete - delete all VMs

